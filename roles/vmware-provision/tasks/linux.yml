---
- name: "Deploy template {{ vm_template }} into a new VM called {{ new_vm_name}}"
  vmware_guest:
    hostname: "{{ vc_hostname | default(omit) }}"
    username: "{{ vc_username | default(omit) }}"
    password: "{{ vc_password | default(omit) }}"
    validate_certs: no
    folder:  /
    datacenter: "{{ vc_datacenter }}"
    datastore: "{{ vc_datastore }}"
    state: poweredoff
    name: "{{ new_vm_name}}"
    template: "{{ vm_template }}"
    linked_clone: "{{ vm_linked_clone | default(omit) }}"
    snapshot_src: "{{ vm_linked_snapshot | default(omit) }}"
    hardware:
      memory_mb: "{{ vm_ram_mb }}"
      num_cpus: "{{ vm_cpu_count }}"
    disk:
    - size_gb: "{{ vm_disk_size }}"
  delegate_to: localhost

- name: "power on {{ new_vm_name}}"
  vmware_guest:
    hostname: "{{ vc_hostname | default(omit) }}"
    username: "{{ vc_username | default(omit) }}"
    password: "{{ vc_password | default(omit) }}"
    validate_certs: no
    state: poweredon
    name: "{{ new_vm_name}}"
    wait_for_ip_address: yes
  delegate_to: localhost
  register: newvminfo
  changed_when: False

- name: New VM info
  debug:
    msg: "New VM {{ new_vm_name}} has IP address {{ newvminfo.instance.ipv4 }} and UUID {{ newvminfo.instance.hw_product_uuid }}"
  when: newvminfo.instance.ipv4 is defined
  ignore_errors: true

- name: "add {{ newvminfo.instance.ipv4 }} host to group newlinuxvm"
  add_host:
    name: "{{ new_vm_name}}"
    ansible_host: "{{ newvminfo.instance.ipv4 }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    name_hostonly: "{{ new_vm_name}}"
    name_fqdn: "{{ new_vm_name}}.{{ vm_domain }}"
    groups: newlinuxvm
  changed_when: False

